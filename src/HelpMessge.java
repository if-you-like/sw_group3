
public class HelpMessge {
	String str="";
	HelpMessge() {
	}
	HelpMessge(int n){
		switch(n){
		case 1://스택
			str="Stack : 여러개의 데이터를 저장하는 LIFO(Last In First Out) 방식의 자료구조\n1.데이터 삽입 : 원하는 값을 입력 후 PUSH 버튼\n2.데이터 삭제 : POP 버튼을 클릭하시면 상단에서부터 차례로 제거됩니다.\n3.스크린샷 : 좌측상단에서부터 클릭한 지점까지 화면 캡쳐\n저장 시에는 확장자까지 입력해주셔야 합니다.(예: abc.jpg, aaa.png 등)";
			break;
		case 2://큐
			str="Queue : 여러개의 데이터를 저장하는 FIFO(First In First Out) 방식의 자료구조\n본 프로그램에서는 원형 큐로 구현되었다.\n\n1.데이터 삽입 : 원하는 값을 입력 후 PUSH 버튼\n2.데이터 삭제 : POP 버튼을 클릭하시면 TAIL 부분부터 삭제가 됩니다.\n3.스크린샷 : 좌측상단에서부터 클릭한 지점까지 화면 캡쳐\n저장 시에는 확장자까지 입력해주셔야 합니다.(예: abc.jpg, aaa.png 등)";			break;
		case 3://리스트
			str="LinkedList : 각 데이터들을 포인터로 연결하려 관리하는 구조\n\n1.데이터 삽입 : 원하는 데이터 값을 입력 후 INSERT 버튼 클릭\n2.원하는 위치에 데이터 삽입 => 원하는 데이터 값 입력, INDEX 클릭 후 넣고자 하는 위치 입력 후 INSERT\n3.데이터 삭제 : 삭제하고자 하는 데이터 입력 후에(인덱스 값 아님) DELETE 버튼 클릭\n4.스크린샷 : 좌측상단에서부터 클릭한 지점까지 화면 캡쳐\n저장 시에는 확장자까지 입력해주셔야 합니다.(예: abc.jpg, aaa.png 등)";			break;
		case 4://bst
			str="BinarySearchTree : 자식이 두개인 이진트리. 왼쪽 서브트리에는 원래 데이터보다 작은값이,\n오른쪽 서브트리에는 원래 데이터보다 큰 값이 들어가게 되어있다.\n\n1.데이터 삽입 : 원하는 데이터 값 입력, INSERT 클릭, START 클릭\n2.데이터 삭제 : 원하는 데이터 값 입력, DELETE 클릭, START 클릭\n3.이전에 실행한 화면 보기 : BEFORE 버튼 클릭\n4.현재 화면 보기 : AFTER 버튼 클릭\n5.스크린샷 : 좌측상단에서부터 클릭한 지점까지 화면 캡쳐\n저장 시에는 확장자까지 입력해주셔야 합니다.(예: abc.jpg, aaa.png 등)";			break;
		case 5://AVL
			str="AVL Tree : 이진 검색 트리에서 좌우 서브트리의 균형을 맞춰주는 트리 중 하나이다.\n\n\n1.데이터 삽입 : 원하는 데이터 값 입력, INSERT 클릭, START 클릭\n2.데이터 삭제 : 원하는 데이터 값 입력, DELETE 클릭, START 클릭\n3.이전에 실행한 화면 보기 : BEFORE 버튼 클릭\n4.현재 화면 보기 : AFTER 버튼 클릭\n5.스크린샷 : 좌측상단에서부터 클릭한 지점까지 화면 캡쳐\n저장 시에는 확장자까지 입력해주셔야 합니다.(예: abc.jpg, aaa.png 등)";			break;
		case 6://버블
			str="Bubble Sort : 서로 이웃한 데이터들을 비교하면서 정렬하는 방식\n\n1.데이터 입력 : 원하는 데이터 값을 작성한 후, 입력 버튼 클릭\n2.난수 입력 : 몇 개의 난수를 사용할지 작성한 후, 랜덤 버튼 클릭\n난수 생성된 상태에서 원하는 데이터 입력 가능합니다.\n3.데이터 삭제 : 몇번째 데이터를 삭제할지 작성한 후, 삭제 버튼 클릭\n4.정렬 속도 조절 : 천천히, 표준, 빠르게 중에 한가지 선택\n5.스크린샷 : 좌측상단에서부터 클릭한 지점까지 화면 캡쳐\n저장 시에는 확장자까지 입력해주셔야 합니다.(예: abc.jpg, aaa.png 등)";			break;
		case 7://삽입
			str="Insert Sort : 아직 정렬되지 않은 임의의 데이터를 이미 정렬된 부분의 적절한 위치에 삽입해 가며 정렬하는 방식\n\n1.데이터 입력 : 원하는 데이터 값을 작성한 후, 입력 버튼 클릭\n2.난수 입력 : 몇 개의 난수를 사용할지 작성한 후, 랜덤 버튼 클릭\n난수 생성된 상태에서 원하는 데이터 입력 가능합니다.\n3.데이터 삭제 : 몇번째 데이터를 삭제할지 작성한 후, 삭제 버튼 클릭\n4.정렬 속도 조절 : 천천히, 표준, 빠르게 중에 한가지 선택\n5.스크린샷 : 좌측상단에서부터 클릭한 지점까지 화면 캡쳐\n저장 시에는 확장자까지 입력해주셔야 합니다.(예: abc.jpg, aaa.png 등)";			break;
		case 8://선택
			str="Selection Sort : 가장 작은 데이터를 찾아서 가장 앞에있는 데이터와 교환하는 방식\n\n1.데이터 입력 : 원하는 데이터 값을 작성한 후, 입력 버튼 클릭\n2.난수 입력 : 몇 개의 난수를 사용할지 작성한 후, 랜덤 버튼 클릭\n난수 생성된 상태에서 원하는 데이터 입력 가능합니다.\n3.데이터 삭제 : 몇번째 데이터를 삭제할지 작성한 후, 삭제 버튼 클릭\n4.정렬 속도 조절 : 천천히, 표준, 빠르게 중에 한가지 선택\n5.스크린샷 : 좌측상단에서부터 클릭한 지점까지 화면 캡쳐\n저장 시에는 확장자까지 입력해주셔야 합니다.(예: abc.jpg, aaa.png 등)";			break;
		case 9://퀵
			str="Quick Sort : 한 데이터를 기준으로 보다 작은 값은 앞으로, 큰 값은 뒤로 보내는 정렬 방식\n\n1.데이터 입력 : 원하는 데이터 값을 작성한 후, 입력 버튼 클릭\n2.난수 입력 : 몇 개의 난수를 사용할지 작성한 후, 랜덤 버튼 클릭\n난수 생성된 상태에서 원하는 데이터 입력 가능합니다.\n3.데이터 삭제 : 몇번째 데이터를 삭제할지 작성한 후, 삭제 버튼 클릭\n4.정렬 속도 조절 : 천천히, 표준, 빠르게 중에 한가지 선택\n5.스크린샷 : 좌측상단에서부터 클릭한 지점까지 화면 캡쳐\n저장 시에는 확장자까지 입력해주셔야 합니다.(예: abc.jpg, aaa.png 등)";			break;
		default:
			str="ERROR";
			break;
		}
	}
}
